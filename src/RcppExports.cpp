// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// colMax
NumericVector colMax(NumericMatrix X);
RcppExport SEXP _modelconf_colMax(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colMax(X));
    return rcpp_result_gen;
END_RCPP
}
// combSimple
IntegerMatrix combSimple(int x);
RcppExport SEXP _modelconf_combSimple(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(combSimple(x));
    return rcpp_result_gen;
END_RCPP
}
// get_Dij
NumericMatrix get_Dij(NumericMatrix bdta, NumericMatrix index);
RcppExport SEXP _modelconf_get_Dij(SEXP bdtaSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type bdta(bdtaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(get_Dij(bdta, index));
    return rcpp_result_gen;
END_RCPP
}
// get_Dij_abs
NumericMatrix get_Dij_abs(NumericMatrix bdta, NumericMatrix index);
RcppExport SEXP _modelconf_get_Dij_abs(SEXP bdtaSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type bdta(bdtaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(get_Dij_abs(bdta, index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_modelconf_colMax", (DL_FUNC) &_modelconf_colMax, 1},
    {"_modelconf_combSimple", (DL_FUNC) &_modelconf_combSimple, 1},
    {"_modelconf_get_Dij", (DL_FUNC) &_modelconf_get_Dij, 2},
    {"_modelconf_get_Dij_abs", (DL_FUNC) &_modelconf_get_Dij_abs, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_modelconf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
